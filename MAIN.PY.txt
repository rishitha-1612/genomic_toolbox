1. main.py

from flask import Flask, render_template, request
import json

app = Flask(__name__)
data_store = {}

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/loading')
def loading():
    return render_template('loading.html')

@app.route('/input')
def input_page():
    return render_template('input.html')

@app.route('/analyze', methods=['POST'])
def analyze():
    data_store['original'] = request.form['original'].upper()
    data_store['mutated'] = request.form['mutated'].upper()
    return render_template('dashboard.html')

@app.route('/mutation')
def mutation_page():
    original = data_store.get("original", "")
    mutated = data_store.get("mutated", "")

    highlighted = ""
    count = 0
    for i in range(min(len(original), len(mutated))):
        if original[i] != mutated[i]:
            highlighted += f"<span class='highlight'>{mutated[i]}</span>"
            count += 1
        else:
            highlighted += mutated[i]

    return render_template("mutation.html",
                           original=original,
                           mutated=mutated,
                           result=highlighted,
                           count=count)

@app.route('/protein')
def protein_page():
    codon_table = {
        "ATA": "I", "ATC": "I", "ATT": "I", "ATG": "M",
        "ACA": "T", "ACC": "T", "ACG": "T", "ACT": "T",
        "AAC": "N", "AAT": "N", "AAA": "K", "AAG": "K",
        "AGC": "S", "AGT": "S", "AGA": "R", "AGG": "R",
        "CTA": "L", "CTC": "L", "CTG": "L", "CTT": "L",
        "CCA": "P", "CCC": "P", "CCG": "P", "CCT": "P",
        "CAC": "H", "CAT": "H", "CAA": "Q", "CAG": "Q",
        "CGA": "R", "CGC": "R", "CGG": "R", "CGT": "R",
        "GTA": "V", "GTC": "V", "GTG": "V", "GTT": "V",
        "GCA": "A", "GCC": "A", "GCG": "A", "GCT": "A",
        "GAC": "D", "GAT": "D", "GAA": "E", "GAG": "E",
        "GGA": "G", "GGC": "G", "GGG": "G", "GGT": "G",
        "TCA": "S", "TCC": "S", "TCG": "S", "TCT": "S",
        "TTC": "F", "TTT": "F", "TTA": "L", "TTG": "L",
        "TAC": "Y", "TAT": "Y", "TAA": "", "TAG": "", "TGA": ""
    }

    mutated = data_store.get("mutated", "")
    codons = []
    amino_acids = []

    for i in range(0, len(mutated), 3):
        codon = mutated[i:i+3]
        if len(codon) == 3:
            codons.append(codon)
            amino_acids.append(codon_table.get(codon, "-"))

    return render_template("protein.html", codons=codons, amino_acids=amino_acids)

@app.route('/disease')
def disease_page():
    original = data_store.get("original", "")
    mutated = data_store.get("mutated", "")

    try:
        with open('disease_data.json') as f:
            disease_list = json.load(f)
    except Exception as e:
        return f"<h2>Error loading disease data: {e}</h2>"

    matches = []

    for d in disease_list:
        pos = d.get("pos", 0) - 1

        if pos < 0 or pos >= len(original) or pos >= len(mutated):
            continue

        original_base = original[pos]
        mutated_base = mutated[pos]

        change = d.get("change", "")
        if ">" not in change:
            continue

        expected_from, expected_to = change.split(">")

        if original_base == expected_from and mutated_base == expected_to:
            matches.append({

                "gene": d.get("gene", "Unknown"),
                "pos": d.get("pos", "?"),
                "change": change,
                "disease": d.get("disease") or d.get("name", "Unknown")
            })

    print("MATCHES:", matches)
    return render_template("disease.html", matches=matches)

@app.route('/dashboard')
def dashboard_page():
    return render_template('dashboard.html')

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=3000)


2. index.html

<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Genomic Toolbox</title>
  <link href="https://fonts.googleapis.com/css2?family=Silkscreen&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/static/style.css">
</head>
<body class="home">
  <div class="container">
    <h1>Welcome to Genomic Toolbox</h1>
    <p class="desc">Built by curious minds, for curious minds.<br><br>This isn’t just any science site — it’s your digital lab!<br><br>GC Content & Mutation Analyzer – Crunch DNA and create random mutations!<br>
    <br>DNA-to-Protein Translator – Turn DNA into proteins, codons and all.<br>
    <br>Symptom & Mutation Disease Predictor – Got a mutated gene? We’ve got clues.</p>
    <form action="/loading">
      <button class="button-54">Analyse your DNA</button>

    </form>
  </div>
</body>
</html>


3. loading.html

<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Loading</title>
  <link href="https://fonts.googleapis.com/css2?family=Silkscreen&display=swap" rel="stylesheet">

  <meta http-equiv="refresh" content="2;url={{ url_for('input_page') }}">
  <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
  <style>
    body, html {
      margin: 0;
      padding: 0;
      height: 100%;
      background-color: black;
      color: white;
      font-family: 'silkscreen', monospace;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    #preloader {
      text-align: center;
    }

    .loading-text {
      font-size: 2.5em;
      margin-bottom: 10px;
      text-align:left
    }

    .subtext {
      font-size: 2.5em;
    }
    .flicker {
      color:#17b727 ;
      text-shadow: 0 0 5px red, 0 0 10px #17b727 ;
      animation: flicker 1s infinite alternate;
    }

    @keyframes flicker {
      0%   { opacity: 1; text-shadow: 0 0 10px #17b727 ; }
      50%  { opacity: 0.4; text-shadow: 0 0 5px #17b727 ; }
      100% { opacity: 1; text-shadow: 0 0 10px #17b727 ; }
    }

  </style>
</head>
<body>
  <div id="preloader">
    <div class="loading-text">Loading</div>
    <div class="subtext">your <span class="flicker">DNA</span> experience...</div>
  </div>
</body>
</html>


4. input.html

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Enter DNA Sequences</title>
  <link href="https://fonts.googleapis.com/css2?family=Silkscreen&display=swap" rel="stylesheet">
  <style>
    body.input {
      background-color: #000000;
      color: #17b727 ;
      font-family: 'Silkscreen', monospace;
      padding: 30px;
    }

    h2 {
      text-align: center;
      color: #17b727 ;
      margin-bottom: 30px;
    }

    .tools {
      display: flex;
      flex-direction: column;
      gap: 30px;
      align-items: center;
      justify-content: center;
    }

    .tool-box {
      width: 500px;
      min-height: 160px;
      background: #000000;
      border: 4px solid #17b727 ;
      color: #17b727;
      padding: 20px;
      text-align: left;
      font-size: 14px;
      border-radius: 8px;
      box-shadow: 4px 4px 0 #17b727 ;
      transition: border 0.3s ease, box-shadow 0.3s ease;
    }

    .tool-box:focus-within {
      border: 4px solid #ffffff;
      box-shadow: 4px 4px 0 #ffffff;
    }

    .tool-box label {
      display: block;
      margin-bottom: 12px;
      color: #17b727 ;
    }

    .tool-box textarea {
      width: 100%;
      height: 60px;
      padding: 10px;
      background-color: #000000;
      border: none;
      color: #17b727 ;
      font-family: 'Silkscreen', monospace;
      border-radius: 6px;
      resize: none;
      font-size: 12px;
      transition: all 0.3s ease;
    }

    .tool-box textarea:focus {
      outline: none;
      box-shadow: none;
      background-color: #000000;
      color: #17b727 ;
    }

    .button-54 {
      display: block;
      margin: 40px auto 0 auto;
      font-family: "silkscreen", sans-serif;
      font-size: 16px;
      letter-spacing: 2px;
      text-decoration: none;
      text-transform: uppercase;
      color: #17b727;
      cursor: pointer;
      border: 3px solid;
      padding: 0.25em 0.5em;
      box-shadow: 1px 1px 0px 0px, 2px 2px 0px 0px, 3px 3px 0px 0px, 4px 4px 0px 0px, 5px 5px 0px 0px;
      position: relative;
      user-select: none;
      -webkit-user-select: none;
      touch-action: manipulation;
    }

    .button-54:active {
      box-shadow: 0px 0px 0px 0px;
      top: 5px;
      left: 5px;
    }

    @media (min-width: 768px) {
      .button-54 {
        padding: 0.25em 0.75em;
      }
    }
  </style>

  <script>
    function validateDNA(event) {
      const original = document.querySelector("textarea[name='original']").value.trim().toUpperCase();
      const mutated = document.querySelector("textarea[name='mutated']").value.trim().toUpperCase();
      const dnaRegex = /^[ATCG]+$/;

      if (!dnaRegex.test(original) || !dnaRegex.test(mutated)) {
        alert("Please enter valid sequences.");
        event.preventDefault();
        return false;
      }

      if (original.length !== mutated.length) {
        alert("Original and Mutated sequences must be of the same length.");
        event.preventDefault();
        return false;
      }

      return true;
    }
  </script>
</head>
<body class="input">
  <h2>Enter Your DNA Sequences</h2>
  <form action="/analyze" method="post" onsubmit="return validateDNA(event)">
    <div class="tools">
      <div class="tool-box">
        <label for="original">Original DNA Sequence:</label>
        <textarea name="original" required></textarea>
      </div>

      <div class="tool-box">
        <label for="mutated">Mutated DNA Sequence:</label>
        <textarea name="mutated" required></textarea>
      </div>
    </div>

    <button class="button-54">Submit</button>
  </form>
</body>
</html>

6. dashboard.html

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Analysis Tools</title>
  <link rel="stylesheet" href="/static/style.css">
  <link href="https://fonts.googleapis.com/css2?family=Silkscreen&display=swap" rel="stylesheet">
</head>
<body class="dashboard">
  <div class="container">
    <h2 class="dashboard-heading">Select a Tool</h2>
    <div class="tools">
      <div class="tool-box" onclick="location.href='/mutation'">
        <h3>Mutation Scanner</h3>
      </div>
      <div class="tool-box" onclick="location.href='/protein'">
        <h3>Amino Converter</h3>
      </div>
      <div class="tool-box" onclick="location.href='/disease'">
        <h3>Risk Alert</h3>
      </div>
    </div>
    <div class="back-wrapper">
      <button onclick="location.href='/input'" class="button-54">Back</button>
    </div>
  </div>
</body>
</html>

7. mutation.html

<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Mutation Checker</title>
  <link href="https://fonts.googleapis.com/css2?family=Silkscreen&display=swap" rel="stylesheet">

  <link rel="stylesheet" href="/static/style.css">
  <style>
    .highlight { background-color: floralwhite; font-weight: bold; }
    .code-block { font-family: silkscreen; white-space: pre-wrap; }
  </style>
</head>
<body class="result">
  <div class="container">
    <h2>Mutation Results</h2>
    <p><strong>Original DNA:</strong></p>
    <p class="code-block">{{ original }}</p>
    <p><strong>Mutated DNA:</strong></p>
    <p class="code-block">{{ mutated }}</p>
    <p><strong>Mutations Found:</strong> {{ count }}</p>
    <pre class="code-block">{{ result | safe }}</pre>
    <br><br>
    <button onclick="location.href='/dashboard'" class="button-54">Back</button>

  </div>
</body>
</html>

8. protein.html

<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Protein Translator</title>
  <link href="https://fonts.googleapis.com/css2?family=Silkscreen&display=swap" rel="stylesheet">

  <link rel="stylesheet" href="/static/style.css">

  <style>
    .codon {
      display: inline-block;
      margin: 6px;
      padding: 8px 12px;
      border-radius: 6px;
      font-family: monospace;
      font-size: 18px;
      color: white;
      background-color: #000000;
    }

    /* Start codon: ATG */
    .start {
      text-decoration: underline;
      text-decoration-color: #00ff00; /* green underline */
      text-decoration-thickness: 3px;
    }

    /* Stop codons: TAA, TAG, TGA */
    .stop {
      text-decoration: underline;
      text-decoration-color: red; /* red underline */
      text-decoration-thickness: 3px;
    }

    /* Normal codons just stay white with no underline */
    .normal {
      /* inherits base codon styling */
    }
  </style>

</head>
<body class="result">
  <div class="container">
    <h2>Protein Translation</h2>

    {% for i in range(codons|length) %}
      {% set codon = codons[i] %}
      {% set aa = amino_acids[i] %}
      {% if codon == 'ATG' %}
        {% set css_class = 'start' %}
      {% elif codon in ['TAA', 'TAG', 'TGA'] %}
        {% set css_class = 'stop' %}
      {% else %}
        {% set css_class = 'normal' %}
      {% endif %}
      <span class="codon {{ css_class }}">{{ codon }} → {{ aa }}</span>
    {% endfor %}

    <br><br>
    <button onclick="location.href='/dashboard'" class="button-54">Back</button>

  </div>
</body>
</html>

9. disease.html

<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Disease Predictor</title>
  <link href="https://fonts.googleapis.com/css2?family=Silkscreen&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/static/style.css">
</head>
<body class="result">
  <div class="container">
    <h2>Disease Prediction</h2>

    {% if matches %}
      <ul>
        {% for d in matches %}
          <li>
            <strong>{{ d.disease }}</strong>
            Gene: {{ d.gene }}<br>
            Position: {{ d.pos }}<br>
            Mutation: {{ d.change }}
          </li>
        {% endfor %}
      </ul>
    {% else %}
      <p>No known diseases detected from the mutations.</p>
    {% endif %}

    <br>
    <button onclick="location.href='/dashboard'" class="button-54">Back</button>
  </div>
</body>
</html>


9. diseas_data.json

i will share it as json sorce fil 